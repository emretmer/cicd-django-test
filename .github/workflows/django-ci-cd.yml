name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.4'

    - name: Install dependencies
      run: |
        python -m venv venv  # Virtual environment oluştur
        source venv/bin/activate  # Virtual environment'ı aktive et
        pip install --upgrade pip  # pip'i güncelle
        pip install django pytest pytest-django  # Django ve test bağımlılıklarını kur

    - name: Set DJANGO_SETTINGS_MODULE
      run: echo "DJANGO_SETTINGS_MODULE=blog.settings" >> $GITHUB_ENV  # Django settings modülünü ayarla

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE/cicdgithub" >> $GITHUB_ENV  # PYTHONPATH'i cicdgithub dizinine ayarla

    - name: Run tests
      run: |
        source venv/bin/activate  # Virtual environment'ı aktive et
        pytest $GITHUB_WORKSPACE/cicdgithub/blog/posts/tests  # Testleri çalıştır

    - name: Update requirements.txt
      run: |
        source venv/bin/activate  # Virtual environment'ı aktive et
        pip freeze > requirements.txt  # Mevcut bağımlılıkları requirements.txt dosyasına yaz

    - name: Build Docker image
      run: |
        docker build -t myapp:$GITHUB_SHA .  # Docker imajını oluştur

    - name: Push Docker image to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub giriş yap
        docker tag myapp:$GITHUB_SHA myusername/myapp:$GITHUB_SHA  # Docker imajını tag'le
        docker push myusername/myapp:$GITHUB_SHA  # Docker imajını Docker Hub'a push et

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.4'

    - name: Install dependencies
      run: |
        python -m venv venv  # Virtual environment oluştur
        source venv/bin/activate  # Virtual environment'ı aktive et
        pip install --upgrade pip  # pip'i güncelle
        pip install django
        pip freeze > requirements.txt  # requirements.txt dosyasındaki bağımlılıkları kur

    - name: Run migrations
      run: |
          source venv/bin/activate  # Virtual environment'ı aktive et
          pip install django
          python cicdgithub/blog/manage.py migrate  # Veritabanı migrasyonlarını çalıştır

    - name: Collect static files
      run: |
          source venv/bin/activate  # Virtual environment'ı aktive et
          pip install django
          python cicdgithub/blog/manage.py collectstatic --noinput  # Statik dosyaları topla

    - name: Deploy to server using Docker
      run: |
        docker pull myusername/myapp:$GITHUB_SHA  # Docker imajını pull et
        docker run -d -p 8000:8000 myusername/myapp:$GITHUB_SHA  # Docker container'ı çalıştır
